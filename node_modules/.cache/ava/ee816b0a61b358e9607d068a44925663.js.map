{"version":3,"sources":["test.js"],"names":["ava","require","IPv4","Cidr","test","ip","is","asString","asInt","asCidr","asHex","reverse","cidr","subnets","length","deepEqual","max","range"],"mappings":"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","file":"test.js","sourcesContent":["const ava = require('ava');\n\nconst IPv4 = require('../index').IPv4;\nconst Cidr = require('../index').Cidr;\n\nava('72.21.196.65', test => {\n  let ip = new IPv4('72.21.196.65');\n  test.is(ip.asString, '72.21.196.65');\n  test.is(ip.asInt, 1209386049);\n  test.is(ip.asCidr, '72.21.196.65/32');\n  test.is(ip.asHex, '4815c441');\n  test.is(ip.reverse, '65.196.21.72.in-addr.arpa');\n});\n\nava('1209386049', test => {\n  let ip = new IPv4(1209386049);\n  test.is(ip.asString, '72.21.196.65');\n  test.is(ip.asInt, 1209386049);\n  test.is(ip.asCidr, '72.21.196.65/32');\n  test.is(ip.asHex, '4815c441');\n  test.is(ip.reverse, '65.196.21.72.in-addr.arpa');\n});\n\nava('10.0.255.255', test => {\n  let ip = new IPv4('10.0.255.255');\n  test.is(ip.asString, '10.0.255.255');\n  test.is(ip.asInt, 167837695);\n  test.is(ip.asCidr, '10.0.255.255/32');\n  test.is(ip.asHex, 'a00ffff');\n  test.is(ip.reverse, '255.255.0.10.in-addr.arpa');\n});\n\nava('10.0.0.0/16', test => {\n  let cidr = new Cidr('10.0.0.0/16');\n  test.is(cidr.subnets('/16').length, 1);\n  test.is(cidr.subnets('/18').length, 4);\n  test.is(cidr.subnets('/24').length, 256);\n  test.is(cidr.subnets('/30').length, 16384);\n  test.deepEqual(cidr.max, new IPv4('10.0.255.255'));\n  test.deepEqual(cidr.range, [new IPv4('10.0.0.0'), new IPv4('10.0.255.255')]);\n});\n\nava('10.0.0.0/17', test => {\n  let cidr = new Cidr('10.0.0.0/17');\n  test.is(cidr.subnets('/18').length, 2);\n  test.is(cidr.subnets('/24').length, 128);\n  test.is(cidr.subnets('/30').length, 8192);\n  test.deepEqual(cidr.max, new IPv4('10.0.127.255'));\n  test.deepEqual(cidr.range, [new IPv4('10.0.0.0'), new IPv4('10.0.127.255')]);\n});\n"]}