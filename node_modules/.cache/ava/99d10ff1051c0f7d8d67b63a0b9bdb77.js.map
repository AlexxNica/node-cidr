{"version":3,"sources":["test.js"],"names":["ava","require","IPv4","Cidr","test","ip","is","asString","asInt","asCidr","test2","console","log","cidr0","subnets","length","max","cidr1","range"],"mappings":";;AAAA,MAAMA,MAAMC,QAAQ,KAAR,CAAZ;;AAEA,MAAMC,OAAOD,QAAQ,UAAR,EAAoBC,IAAjC;AACA,MAAMC,OAAOF,QAAQ,UAAR,EAAoBE,IAAjC;;AAEAH,IAAI,cAAJ,EAAoBI,QAAQ;AAC1B,MAAIC,KAAK,IAAIH,IAAJ,CAAS,cAAT,CAAT;AACAE,OAAKE,EAAL,CAAQD,GAAGE,QAAX,EAAqB,cAArB;AACAH,OAAKE,EAAL,CAAQD,GAAGG,KAAX,EAAkB,UAAlB;AACAJ,OAAKE,EAAL,CAAQD,GAAGI,MAAX,EAAmB,iBAAnB;AACD,CALD;;AAOAT,IAAI,YAAJ,EAAkBI,QAAQ;AACxB,MAAIC,KAAK,IAAIH,IAAJ,CAAS,UAAT,CAAT;AACAE,OAAKE,EAAL,CAAQD,GAAGE,QAAX,EAAqB,cAArB;AACAH,OAAKE,EAAL,CAAQD,GAAGG,KAAX,EAAkB,UAAlB;AACAJ,OAAKE,EAAL,CAAQD,GAAGI,MAAX,EAAmB,iBAAnB;AACD,CALD;;AAOAT,IAAI,cAAJ,EAAoBI,QAAQ;AAC1B,MAAIC,KAAK,IAAIH,IAAJ,CAAS,cAAT,CAAT;AACAE,OAAKE,EAAL,CAAQD,GAAGE,QAAX,EAAqB,cAArB;AACAH,OAAKE,EAAL,CAAQD,GAAGG,KAAX,EAAkB,SAAlB;AACAJ,OAAKE,EAAL,CAAQD,GAAGI,MAAX,EAAmB,iBAAnB;AACD,CALD;;AAOA,IAAIC,QAAQ,IAAIR,IAAJ,CAAS,cAAT,CAAZ;AACAS,QAAQC,GAAR,CAAYF,MAAMH,QAAlB;AACAI,QAAQC,GAAR,CAAYF,MAAMF,KAAlB;;AAEAG,QAAQC,GAAR,CAAY,YAAZ;AACA,IAAIC,QAAQ,IAAIV,IAAJ,CAAS,aAAT,CAAZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAQ,QAAQC,GAAR,CAAY,KAAZ;AACAD,QAAQC,GAAR,CAAYC,MAAMC,OAAN,CAAc,KAAd,EAAqBC,MAAjC;AACAJ,QAAQC,GAAR,CAAY,KAAZ;AACAD,QAAQC,GAAR,CAAYC,MAAMC,OAAN,CAAc,KAAd,EAAqBC,MAAjC;AACAJ,QAAQC,GAAR,CAAYC,MAAMG,GAAlB;;AAEAL,QAAQC,GAAR,CAAY,aAAZ;AACA,IAAIK,QAAQ,IAAId,IAAJ,CAAS,aAAT,CAAZ;AACAQ,QAAQC,GAAR,CAAY,KAAZ;AACAD,QAAQC,GAAR,CAAYK,MAAMH,OAAN,CAAc,KAAd,EAAqBC,MAAjC;AACAJ,QAAQC,GAAR,CAAYK,MAAMD,GAAN,CAAUT,QAAtB;AACAI,QAAQC,GAAR,CAAYK,MAAMC,KAAlB","file":"test.js","sourcesContent":["const ava = require('ava');\n\nconst IPv4 = require('../index').IPv4;\nconst Cidr = require('../index').Cidr;\n\nava('72.21.196.65', test => {\n  let ip = new IPv4('72.21.196.65');\n  test.is(ip.asString, '72.21.196.65');\n  test.is(ip.asInt, 1209386049);\n  test.is(ip.asCidr, '72.21.196.65/32');\n});\n\nava('1209386049', test => {\n  let ip = new IPv4(1209386049);\n  test.is(ip.asString, '72.21.196.65');\n  test.is(ip.asInt, 1209386049);\n  test.is(ip.asCidr, '72.21.196.65/32');\n});\n\nava('10.0.255.255', test => {\n  let ip = new IPv4('10.0.255.255');\n  test.is(ip.asString, '10.0.255.255');\n  test.is(ip.asInt, 167837695);\n  test.is(ip.asCidr, '10.0.255.255/32');\n});\n\nlet test2 = new IPv4('10.0.255.255');\nconsole.log(test2.asString);\nconsole.log(test2.asInt);\n\nconsole.log('10.0.0.0/8');\nlet cidr0 = new Cidr('10.0.0.0/16');\n\n//console.log('24:');\n//console.log(cidr0.subnets('/24'));\n//console.log('31:');\n//console.log(cidr0.subnets('/31'));\n//console.log('32:');\n//console.log(cidr0.subnets('/32'));\nconsole.log('16:');\nconsole.log(cidr0.subnets('/16').length);\nconsole.log('24:');\nconsole.log(cidr0.subnets('/24').length);\nconsole.log(cidr0.max);\n\nconsole.log('10.0.0.0/17');\nlet cidr1 = new Cidr('10.0.0.0/17');\nconsole.log('24:');\nconsole.log(cidr1.subnets('/24').length);\nconsole.log(cidr1.max.asString);\nconsole.log(cidr1.range);\n"]}