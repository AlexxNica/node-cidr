'use strict';// RFC6890: Special-Purpose IP Address Registries
var cov_86xx0wrrh=function(){var path='/Users/arming/WebstormProjects/decidr/index.js',hash='c25f273ecb6f704cf5a278ad7a9ecf2e96c226d2',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/arming/WebstormProjects/decidr/index.js',statementMap:{'0':{start:{line:4,column:23},end:{line:70,column:1}},'1':{start:{line:72,column:25},end:{line:72,column:50}},'2':{start:{line:75,column:2},end:{line:80,column:4}},'3':{start:{line:77,column:6},end:{line:77,column:48}},'4':{start:{line:84,column:2},end:{line:84,column:63}},'5':{start:{line:88,column:15},end:{line:88,column:17}},'6':{start:{line:89,column:2},end:{line:91,column:5}},'7':{start:{line:90,column:4},end:{line:90,column:33}},'8':{start:{line:92,column:2},end:{line:92,column:16}},'9':{start:{line:96,column:2},end:{line:103,column:11}},'10':{start:{line:98,column:6},end:{line:98,column:72}},'11':{start:{line:99,column:6},end:{line:99,column:60}},'12':{start:{line:100,column:6},end:{line:100,column:17}},'13':{start:{line:107,column:2},end:{line:109,column:3}},'14':{start:{line:108,column:4},end:{line:108,column:25}},'15':{start:{line:110,column:2},end:{line:110,column:15}},'16':{start:{line:115,column:4},end:{line:115,column:22}},'17':{start:{line:116,column:4},end:{line:120,column:5}},'18':{start:{line:117,column:6},end:{line:117,column:43}},'19':{start:{line:118,column:11},end:{line:120,column:5}},'20':{start:{line:119,column:6},end:{line:119,column:40}},'21':{start:{line:121,column:4},end:{line:121,column:75}},'22':{start:{line:121,column:23},end:{line:121,column:75}},'23':{start:{line:125,column:4},end:{line:125,column:40}},'24':{start:{line:129,column:4},end:{line:129,column:37}},'25':{start:{line:133,column:4},end:{line:133,column:48}},'26':{start:{line:137,column:4},end:{line:139,column:40}},'27':{start:{line:143,column:12},end:{line:143,column:14}},'28':{start:{line:144,column:4},end:{line:146,column:5}},'29':{start:{line:145,column:6},end:{line:145,column:66}},'30':{start:{line:147,column:4},end:{line:147,column:45}},'31':{start:{line:151,column:4},end:{line:151,column:35}},'32':{start:{line:160,column:16},end:{line:160,column:32}},'33':{start:{line:161,column:4},end:{line:161,column:29}},'34':{start:{line:162,column:4},end:{line:162,column:34}},'35':{start:{line:169,column:18},end:{line:169,column:32}},'36':{start:{line:170,column:14},end:{line:170,column:49}},'37':{start:{line:171,column:4},end:{line:171,column:35}},'38':{start:{line:189,column:4},end:{line:189,column:32}},'39':{start:{line:202,column:4},end:{line:202,column:35}},'40':{start:{line:203,column:16},end:{line:203,column:30}},'41':{start:{line:204,column:14},end:{line:204,column:28}},'42':{start:{line:205,column:18},end:{line:205,column:20}},'43':{start:{line:207,column:15},end:{line:207,column:38}},'44':{start:{line:209,column:4},end:{line:212,column:5}},'45':{start:{line:210,column:6},end:{line:210,column:59}},'46':{start:{line:211,column:6},end:{line:211,column:20}},'47':{start:{line:213,column:4},end:{line:213,column:19}},'48':{start:{line:267,column:0},end:{line:270,column:2}}},fnMap:{'0':{name:'octetsToInt',decl:{start:{line:74,column:9},end:{line:74,column:20}},loc:{start:{line:74,column:29},end:{line:81,column:1}}},'1':{name:'(anonymous_1)',decl:{start:{line:76,column:4},end:{line:76,column:5}},loc:{start:{line:76,column:29},end:{line:78,column:5}}},'2':{name:'octetsToString',decl:{start:{line:83,column:9},end:{line:83,column:23}},loc:{start:{line:83,column:32},end:{line:85,column:1}}},'3':{name:'stringToOctets',decl:{start:{line:87,column:9},end:{line:87,column:23}},loc:{start:{line:87,column:31},end:{line:93,column:1}}},'4':{name:'(anonymous_4)',decl:{start:{line:89,column:27},end:{line:89,column:28}},loc:{start:{line:89,column:36},end:{line:91,column:3}}},'5':{name:'intToOctets',decl:{start:{line:95,column:9},end:{line:95,column:20}},loc:{start:{line:95,column:28},end:{line:104,column:1}}},'6':{name:'(anonymous_6)',decl:{start:{line:97,column:4},end:{line:97,column:5}},loc:{start:{line:97,column:29},end:{line:101,column:5}}},'7':{name:'padLeft',decl:{start:{line:106,column:9},end:{line:106,column:16}},loc:{start:{line:106,column:35},end:{line:111,column:1}}},'8':{name:'(anonymous_8)',decl:{start:{line:114,column:2},end:{line:114,column:3}},loc:{start:{line:114,column:21},end:{line:122,column:3}}},'9':{name:'(anonymous_9)',decl:{start:{line:124,column:2},end:{line:124,column:3}},loc:{start:{line:124,column:17},end:{line:126,column:3}}},'10':{name:'(anonymous_10)',decl:{start:{line:128,column:2},end:{line:128,column:3}},loc:{start:{line:128,column:14},end:{line:130,column:3}}},'11':{name:'(anonymous_11)',decl:{start:{line:132,column:2},end:{line:132,column:3}},loc:{start:{line:132,column:15},end:{line:134,column:3}}},'12':{name:'(anonymous_12)',decl:{start:{line:136,column:2},end:{line:136,column:3}},loc:{start:{line:136,column:16},end:{line:140,column:3}}},'13':{name:'(anonymous_13)',decl:{start:{line:142,column:2},end:{line:142,column:3}},loc:{start:{line:142,column:17},end:{line:148,column:3}}},'14':{name:'(anonymous_14)',decl:{start:{line:150,column:2},end:{line:150,column:3}},loc:{start:{line:150,column:14},end:{line:152,column:3}}},'15':{name:'(anonymous_15)',decl:{start:{line:154,column:2},end:{line:154,column:3}},loc:{start:{line:154,column:20},end:{line:155,column:3}}},'16':{name:'(anonymous_16)',decl:{start:{line:159,column:2},end:{line:159,column:3}},loc:{start:{line:159,column:21},end:{line:164,column:3}}},'17':{name:'(anonymous_17)',decl:{start:{line:168,column:2},end:{line:168,column:3}},loc:{start:{line:168,column:12},end:{line:172,column:3}}},'18':{name:'(anonymous_18)',decl:{start:{line:174,column:2},end:{line:174,column:3}},loc:{start:{line:174,column:14},end:{line:175,column:3}}},'19':{name:'(anonymous_19)',decl:{start:{line:177,column:2},end:{line:177,column:3}},loc:{start:{line:177,column:16},end:{line:186,column:3}}},'20':{name:'(anonymous_20)',decl:{start:{line:188,column:2},end:{line:188,column:3}},loc:{start:{line:188,column:14},end:{line:190,column:3}}},'21':{name:'(anonymous_21)',decl:{start:{line:192,column:2},end:{line:192,column:3}},loc:{start:{line:192,column:16},end:{line:193,column:3}}},'22':{name:'(anonymous_22)',decl:{start:{line:195,column:2},end:{line:195,column:3}},loc:{start:{line:195,column:15},end:{line:196,column:3}}},'23':{name:'(anonymous_23)',decl:{start:{line:198,column:2},end:{line:198,column:3}},loc:{start:{line:198,column:18},end:{line:199,column:3}}},'24':{name:'(anonymous_24)',decl:{start:{line:201,column:2},end:{line:201,column:3}},loc:{start:{line:201,column:17},end:{line:214,column:3}}},'25':{name:'(anonymous_25)',decl:{start:{line:216,column:2},end:{line:216,column:3}},loc:{start:{line:216,column:15},end:{line:227,column:3}}},'26':{name:'(anonymous_26)',decl:{start:{line:229,column:2},end:{line:229,column:3}},loc:{start:{line:229,column:24},end:{line:230,column:3}}},'27':{name:'(anonymous_27)',decl:{start:{line:232,column:2},end:{line:232,column:3}},loc:{start:{line:232,column:13},end:{line:233,column:3}}},'28':{name:'(anonymous_28)',decl:{start:{line:235,column:2},end:{line:235,column:3}},loc:{start:{line:235,column:15},end:{line:236,column:3}}},'29':{name:'(anonymous_29)',decl:{start:{line:238,column:2},end:{line:238,column:3}},loc:{start:{line:238,column:10},end:{line:248,column:3}}},'30':{name:'(anonymous_30)',decl:{start:{line:251,column:2},end:{line:251,column:3}},loc:{start:{line:251,column:14},end:{line:252,column:3}}},'31':{name:'(anonymous_31)',decl:{start:{line:255,column:2},end:{line:255,column:3}},loc:{start:{line:255,column:14},end:{line:256,column:3}}},'32':{name:'(anonymous_32)',decl:{start:{line:259,column:2},end:{line:259,column:3}},loc:{start:{line:259,column:16},end:{line:260,column:3}}},'33':{name:'(anonymous_33)',decl:{start:{line:263,column:2},end:{line:263,column:3}},loc:{start:{line:263,column:16},end:{line:264,column:3}}}},branchMap:{'0':{loc:{start:{line:116,column:4},end:{line:120,column:5}},type:'if',locations:[{start:{line:116,column:4},end:{line:120,column:5}},{start:{line:116,column:4},end:{line:120,column:5}}]},'1':{loc:{start:{line:118,column:11},end:{line:120,column:5}},type:'if',locations:[{start:{line:118,column:11},end:{line:120,column:5}},{start:{line:118,column:11},end:{line:120,column:5}}]},'2':{loc:{start:{line:121,column:4},end:{line:121,column:75}},type:'if',locations:[{start:{line:121,column:4},end:{line:121,column:75}},{start:{line:121,column:4},end:{line:121,column:75}}]}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0,'34':0,'35':0,'36':0,'37':0,'38':0,'39':0,'40':0,'41':0,'42':0,'43':0,'44':0,'45':0,'46':0,'47':0,'48':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0,'23':0,'24':0,'25':0,'26':0,'27':0,'28':0,'29':0,'30':0,'31':0,'32':0,'33':0},b:{'0':[0,0],'1':[0,0],'2':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();let special_addr_tbl=(++cov_86xx0wrrh.s[0],{'0.0.0.0/8':{name:'This host on this network',attrs:'S'},'10.0.0.0/8':{name:'Private-Use',attrs:'SDF'},'100.64.0.0/10':{name:'Shared Address Space',attrs:'SDF'},'127.0.0.0/8':{name:'Loopback',attrs:''},'169.254.0.0/16':{name:'Link Local',attrs:'SD'},'172.16.0.0/12':{name:'Private-Use',attrs:'SDF'},// we write it before /24, otherwise Net#describe() won't match it
'192.0.0.0/29 ':{name:'DS-Lite',attrs:'SDF'},'192.0.0.0/24':{name:'IETF Protocol Assignments',attrs:''},'192.0.2.0/24 ':{name:'Documentation (TEST-NET-1)',attrs:''},'192.88.99.0/24':{name:'6to4 Relay Anycast',attrs:'SDFG'},'192.168.0.0/16':{name:'Private-Use',attrs:'SDF'},'198.18.0.0/15':{name:'Benchmarking',attrs:'SDF'},'198.51.100.0/24':{name:'Documentation (TEST-NET-2)',attrs:''},'203.0.113.0/24':{name:'Documentation (TEST-NET-3)',attrs:''},'255.255.255.255/32':{name:'Limited Broadcast',attrs:'D'},'240.0.0.0/4':{name:'Reserved',attrs:''}});const octet_multiplier=(++cov_86xx0wrrh.s[1],[16777216,65536,256,1]);function octetsToInt(octets){++cov_86xx0wrrh.f[0];++cov_86xx0wrrh.s[2];return octets.reduce(function(acc,curr,idx){++cov_86xx0wrrh.f[1];++cov_86xx0wrrh.s[3];return acc+curr*octet_multiplier[idx];},0);}function octetsToString(octets){++cov_86xx0wrrh.f[2];++cov_86xx0wrrh.s[4];return`${octets[0]}.${octets[1]}.${octets[2]}.${octets[3]}`;}function stringToOctets(input){++cov_86xx0wrrh.f[3];let octets=(++cov_86xx0wrrh.s[5],[]);++cov_86xx0wrrh.s[6];input.split('.').forEach(octet=>{++cov_86xx0wrrh.f[4];++cov_86xx0wrrh.s[7];octets.push(parseInt(octet));});++cov_86xx0wrrh.s[8];return octets;}function intToOctets(input){++cov_86xx0wrrh.f[5];++cov_86xx0wrrh.s[9];return octet_multiplier.reduce(function(arr,curr,idx){++cov_86xx0wrrh.f[6];++cov_86xx0wrrh.s[10];arr.octets[idx]=parseInt(arr.remainder/octet_multiplier[idx]);++cov_86xx0wrrh.s[11];arr.remainder=arr.remainder%octet_multiplier[idx];++cov_86xx0wrrh.s[12];return arr;},{octets:[],remainder:input}).octets;}function padLeft(input,char,min){++cov_86xx0wrrh.f[7];++cov_86xx0wrrh.s[13];while(input.length<min){++cov_86xx0wrrh.s[14];input=char+input;}++cov_86xx0wrrh.s[15];return input;}class IPv4{constructor(input){++cov_86xx0wrrh.f[8];++cov_86xx0wrrh.s[16];this._octets=[];++cov_86xx0wrrh.s[17];if(typeof input==='string'){++cov_86xx0wrrh.b[0][0];++cov_86xx0wrrh.s[18];this._octets=stringToOctets(input);}else{++cov_86xx0wrrh.b[0][1];++cov_86xx0wrrh.s[19];if(typeof input==='number'){++cov_86xx0wrrh.b[1][0];++cov_86xx0wrrh.s[20];this._octets=intToOctets(input);}else{++cov_86xx0wrrh.b[1][1];}}++cov_86xx0wrrh.s[21];if(!this._octets){++cov_86xx0wrrh.b[2][0];++cov_86xx0wrrh.s[22];throw new Error('Not able to validate IP address.');}else{++cov_86xx0wrrh.b[2][1];}}get asString(){++cov_86xx0wrrh.f[9];++cov_86xx0wrrh.s[23];return octetsToString(this._octets);}get asInt(){++cov_86xx0wrrh.f[10];++cov_86xx0wrrh.s[24];return octetsToInt(this._octets);}get asCidr(){++cov_86xx0wrrh.f[11];++cov_86xx0wrrh.s[25];return octetsToString(this._octets)+'/32';}get reverse(){++cov_86xx0wrrh.f[12];++cov_86xx0wrrh.s[26];return`${this._octets[3]}.${this._octets[2]}.${this._octets[1]}.${this._octets[0]}.in-addr.arpa`;}get asBinary(){++cov_86xx0wrrh.f[13];let o=(++cov_86xx0wrrh.s[27],[]);++cov_86xx0wrrh.s[28];for(let i=0;i<this._octets.length;i++){++cov_86xx0wrrh.s[29];o[i]=padLeft((this._octets[i]>>>0).toString(2),'0',8);}++cov_86xx0wrrh.s[30];return`${o[0]}.${o[1]}.${o[2]}.${o[3]}`;}get asHex(){++cov_86xx0wrrh.f[14];++cov_86xx0wrrh.s[31];return this.asInt.toString(16);}get countryCode(){++cov_86xx0wrrh.f[15];}}class Cidr{constructor(input){++cov_86xx0wrrh.f[16];let split=(++cov_86xx0wrrh.s[32],input.split('/'));++cov_86xx0wrrh.s[33];this._bitMask=split[1];++cov_86xx0wrrh.s[34];this._ip=new IPv4(split[0]);//TODO: accept array of ips, generate the lowest common denominator CIDR
}//TODO: Add validation
get max(){++cov_86xx0wrrh.f[17];let initial=(++cov_86xx0wrrh.s[35],this._ip.asInt);let add=(++cov_86xx0wrrh.s[36],Math.pow(2,32-this._bitMask)-1);++cov_86xx0wrrh.s[37];return new IPv4(initial+add);}get count(){++cov_86xx0wrrh.f[18];}get netmask(){/*
    "netmask": {
    "value": 4294901760,
    "address": "255.255.0.0",
    "binary": "11111111111111110000000000000000",
    "hexadecimal": "FFFF0000"
     },
    */++cov_86xx0wrrh.f[19];}get range(){++cov_86xx0wrrh.f[20];++cov_86xx0wrrh.s[38];return[this._ip,this.max];}get gateway(){++cov_86xx0wrrh.f[21];}get usable(){++cov_86xx0wrrh.f[22];}get broadcast(){++cov_86xx0wrrh.f[23];}subnets(input){++cov_86xx0wrrh.f[24];++cov_86xx0wrrh.s[39];input=input.replace('/','');let count=(++cov_86xx0wrrh.s[40],this._ip.asInt);let max=(++cov_86xx0wrrh.s[41],this.max.asInt);let subnets=(++cov_86xx0wrrh.s[42],[]);let step=(++cov_86xx0wrrh.s[43],Math.pow(2,32-input));++cov_86xx0wrrh.s[44];while(count<max){++cov_86xx0wrrh.s[45];subnets.push(`${new IPv4(count).asString}/${input}`);++cov_86xx0wrrh.s[46];count+=step;}++cov_86xx0wrrh.s[47];return subnets;}get ipList(){//var block = '127.0.0.0/30';
//> Array.from(new cidr.Net('1.2.3.4/29').to_iter())
/*
        [ #<IPv4: 1.2.3.1>,
            #<IPv4: 1.2.3.2>,
            #<IPv4: 1.2.3.3>,
            #<IPv4: 1.2.3.4>,
            #<IPv4: 1.2.3.5>,
            #<IPv4: 1.2.3.6> ]
      */++cov_86xx0wrrh.f[25];}intersects(otherCidr){++cov_86xx0wrrh.f[26];}get size(){++cov_86xx0wrrh.f[27];}includes(ip){++cov_86xx0wrrh.f[28];}merge(){++cov_86xx0wrrh.f[29];}/*
        cidrTools.merge(networks)
        networks array: A list of IPv4 and IPv6 networks.
        Returns: A promise that resolves to an array of merged networks.
        cidrTools.merge(['1.0.0.0/24', '1.0.1.0/24']).then(r => {
        console.log(r);
        //=> ['1.0.0.0/23'] 
        });
    */// Increment an address (non-mutating)
increment(){++cov_86xx0wrrh.f[30];}// Decrement an address (non-mutating)
decrement(){++cov_86xx0wrrh.f[31];}// Find the next adjacent subnet
nextSibling(){++cov_86xx0wrrh.f[32];}// Find the previous adjacent subnet
prevSibling(){++cov_86xx0wrrh.f[33];}}++cov_86xx0wrrh.s[48];module.exports={IPv4:IPv4,Cidr:Cidr};